name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run tests
      run: go test -race ./...

    - name: Build
      run: go build -v ./...

    - name: Validate examples compile
      run: go run validate.go

    - name: Generate release notes
      id: release_notes
      run: |
        # Get the tag name
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 $TAG_NAME^ 2>/dev/null || echo "")
        
        # Generate release notes
        if [ -n "$PREV_TAG" ]; then
          echo "## What's Changed" > release_notes.md
          echo "" >> release_notes.md
          git log --pretty=format:"* %s (%h)" $PREV_TAG..$TAG_NAME >> release_notes.md
          echo "" >> release_notes.md
          echo "" >> release_notes.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREV_TAG...$TAG_NAME" >> release_notes.md
        else
          echo "## What's New" > release_notes.md
          echo "" >> release_notes.md
          echo "Initial release of Cadwyn-Go - Stripe-like API versioning for Go applications." >> release_notes.md
          echo "" >> release_notes.md
          echo "### Features" >> release_notes.md
          echo "* 🎯 Simple & Flexible API versioning" >> release_notes.md
          echo "* 📅 Multiple version formats (date, semantic, string)" >> release_notes.md
          echo "* 🔄 Instruction-based migrations" >> release_notes.md
          echo "* 🏗️ Builder pattern for easy configuration" >> release_notes.md
          echo "* 🌐 Gin integration" >> release_notes.md
          echo "* 🔧 Schema generation" >> release_notes.md
          echo "* ⚡ Version detection middleware" >> release_notes.md
        fi
        
        echo "release_notes<<EOF" >> $GITHUB_OUTPUT
        cat release_notes.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release_notes.outputs.tag_name }}
        release_name: Release ${{ steps.release_notes.outputs.tag_name }}
        body: ${{ steps.release_notes.outputs.release_notes }}
        draft: false
        prerelease: ${{ contains(steps.release_notes.outputs.tag_name, 'alpha') || contains(steps.release_notes.outputs.tag_name, 'beta') || contains(steps.release_notes.outputs.tag_name, 'rc') }}

    - name: Update Go module proxy
      run: |
        # Trigger Go module proxy to fetch the new version
        GOPROXY=proxy.golang.org go list -m github.com/isaacchung/cadwyn-go@${{ steps.release_notes.outputs.tag_name }}
